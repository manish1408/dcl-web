{"pageProps":{"postList":{"page":1,"results_per_page":2,"results_size":1,"total_results_size":3,"total_pages":2,"next_page":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5Bat%28document.type%2C+%22blog_post%22%29%5D%5D&orderings=%5Bmy.post.date%5D&page=2&pageSize=2","prev_page":null,"results":[{"id":"YJNPvBEAACMAFnZ1","uid":"why-you-should-be-using-jamstack","type":"blog_post","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJNPvBEAACMAFnZ1%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-06T02:09:05+0000","last_publication_date":"2021-05-24T19:08:41+0000","slugs":["why-you-should-be-using-jamstack"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"is_featured":true,"featured_image":{"dimensions":{"width":350,"height":300},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/96453228-78db-40f3-88db-9002b57af80e_usejamstack.avif?auto=compress,format&rect=212,0,817,700&w=350&h=300"},"banner_image":{"dimensions":{"width":1240,"height":700},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/96453228-78db-40f3-88db-9002b57af80e_usejamstack.avif?auto=compress,format"},"date":"2021-05-22T18:30:00+0000","title":[{"type":"heading1","text":"Why you should be using JAMstack","spans":[]}],"heading":[{"type":"heading1","text":"","spans":[]}],"body":[{"type":"heading2","text":"Why you should be using JAMstack","spans":[]},{"type":"paragraph","text":"Working in the world of development can be a bit confusing, with lots of trends coming up to interrupt our normal lives and give us a bad case of FOMO. We‘re mostly stuck between learning, relearning and unlearning. Sometimes the new trends are not different from technologies we’ve already been using, other times, it will change your life or in this case, your stack.","spans":[]},{"type":"paragraph","text":"In this article, we will be looking at the JAMstack and how it has come to make a huge difference in the way we build web platforms. We will be exploring how this approach to simplifying the technology stack can lead to shorter development times, with better performance and greater security.","spans":[{"start":43,"end":51,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/","target":"_blank"}}]},{"type":"heading2","text":"What have we been doing?","spans":[]},{"type":"paragraph","text":"We have conventionally built web sites and web apps by setting up servers to help interact with a database and yes, that worked, but also we’d have to spend a lot of time worrying about performance and setting up these facilities. Security protocols for these platforms also cost a lot and since we have information moving from the server side to the client side, platforms may be prone to security risks.","spans":[]},{"type":"heading2","text":"What is JAMstack?","spans":[]},{"type":"paragraph","text":"It’s not a bird, it’s not a plane …… no, it’s not Superman. JAMstack (JavaScript, API & Markdown) is a new way of building websites and apps that delivers better performance, higher security, lower cost of scaling, and better developer experience. It achieves this by keeping most of the functionality on the client side and abstracting all other functionalities to 3rd party API’s. Basically, all the heavy lifting is done by the API’s.","spans":[{"start":60,"end":68,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/","target":"_blank"}}]},{"type":"paragraph","text":"With the emphasis on web performance and great user experience, a few trends emerged:","spans":[]},{"type":"list-item","text":"PWA (offline apps, reliable, native-like UX)","spans":[]},{"type":"list-item","text":"Serverless (simplified back-end, best-of-breed services, infinite scalability without regard for physical location of servers)","spans":[{"start":0,"end":10,"type":"hyperlink","data":{"link_type":"Web","url":"https://serverless.com/","target":"_blank"}}]},{"type":"list-item","text":"GraphQL(standardized access to data for apps that use ad-hoc, fast-changing, database schema)","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://graphql.org/","target":"_blank"}}]},{"type":"list-item","text":"SSG (using CDN techniques for edge caching of pre-rendered content pages)","spans":[]},{"type":"paragraph","text":"The above trends developed independently until JAMstack came and unified them. And now that JAMStack is here, people are starting to pull away from servers. At the same time, they are running after speed, optimization, and snappy websites.","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading2","text":"Meet the stacks","spans":[{"start":0,"end":15,"type":"strong"}]},{"type":"paragraph","text":"Before we go further into discussing how JAMstack achieves its awesomeness, let’s take a look at the other stacks and how they work, to help better appreciate the JAMstack. Before its existence developers used different tools to set up web platforms and apps as such.","spans":[]},{"type":"heading3","text":"LAMP","spans":[]},{"type":"paragraph","text":"LAMP represents the foundation of a Linux hosted website. LAMP stacks are comprised of, a Linux operating system (L), an Apache Web Server (A), a MySQL database layer (M) and a PHP scripting layer (P). The major problem with this stack is that it has a learning curve. This increases the amount of time to set up a functional app and this can eventually lead to performance issues on applications with simultaneous users, as well as security issues.","spans":[{"start":0,"end":4,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.digitalocean.com/community/tags/lamp-stack?type=tutorials","target":"_blank"}},{"start":121,"end":138,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.techopedia.com/definition/4851/apache-web-server","target":"_blank"}}]},{"type":"heading3","text":"MEAN","spans":[]},{"type":"paragraph","text":"The stack is comprised of a MongoDB (M) document database, Express.js (E) which is a back-end web application framework, Angular.js (A) which is a front-end web application framework, and Node.js (N), a JavaScript run-time environment. Platforms are built in JavaScript from start to finish here and it is really recommended for large, non-relational data set, the only set back here is that everything is done in just JavaScript.","spans":[]},{"type":"heading3","text":"MERN","spans":[]},{"type":"paragraph","text":"The stack is comprised of a MongoDB (M) document database, Express.js (E) which is a back-end web application framework, React (R) which is a JavaScript library for building user interfaces and Node.js (N), a JavaScript run time environment. Again platforms are built in JavaScript from start to finish and the only set back here is that everything is done in just JavaScript.","spans":[]},{"type":"heading2","text":"How other stacks work","spans":[]},{"type":"list-item","text":"Building and hosting are coupled","spans":[]},{"type":"list-item","text":"A user requests a page. The file gets processed and served following a (long) series of interaction between a database, back-end code, server, browser, and layers of caching","spans":[]},{"type":"list-item","text":"Core updates are pushed to production servers, often through FTP. The database must be maintained or updated","spans":[]},{"type":"list-item","text":"Content updates are pushed through traditional CMS, like WordPress or Drupal","spans":[]},{"type":"heading2","text":"JAMstack workflow","spans":[]},{"type":"list-item","text":"Building and hosting are decoupled","spans":[{"start":25,"end":34,"type":"em"}]},{"type":"list-item","text":"A user requests a page. The file is already compiled and gets directly served to the browser from a CDN","spans":[]},{"type":"list-item","text":"Core updates are pushed through Git; the site gets re-built entirely via modern build tools like static site generators (Gatsby, Hugo)","spans":[]},{"type":"list-item","text":"Content updates are pushed through Git or a static site CMS","spans":[]},{"type":"heading2","text":"JAMstack superpowers","spans":[]},{"type":"paragraph","text":"You might be wondering why you need to use another stack. Well, I have five reasons you should be using JAMstack:","spans":[]},{"type":"list-item","text":"Better performance: Building with JAMstack helps to get pages generated at deploy time since they are mainly stored as Markup and can be delivered over a CDN.","spans":[{"start":0,"end":18,"type":"strong"}]},{"type":"list-item","text":"High-security: Static websites have a very low potential for vulnerabilities because it is just HTML files and external API-handling served over a CDN. This reduces any possible risk for attack on the website. It is easy to integrate SSL certificate with Let’s Encrypt. Also, it leverages the use of server-side microservice APIs to secure the websites.","spans":[{"start":0,"end":13,"type":"strong"},{"start":255,"end":268,"type":"hyperlink","data":{"link_type":"Web","url":"https://letsencrypt.org/","target":"_blank"}}]},{"type":"list-item","text":"Cheap and fast deployment: JAMstack websites can easily be deployed without going through the hassle of configuring databases and securing the database. We are only dealing with static files which are simple to get up and running.","spans":[{"start":0,"end":25,"type":"strong"}]},{"type":"list-item","text":"Awesome developer experience: One of the most important advantages of using JAMstack is that it is not difficult to learn. With just HTML, CSS and JS experience, developers can build complex websites. The use of site generators removes the need to maintain a separate stack for content and marketing.","spans":[{"start":0,"end":28,"type":"strong"}]},{"type":"list-item","text":"Great community: The JAMstack community is growing over time. New support for various functionality springs up every day. Even more exciting is the local community meetups being created. The online community is also amazing.","spans":[{"start":0,"end":15,"type":"strong"},{"start":148,"end":171,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/community/","target":"_blank"}},{"start":191,"end":207,"type":"hyperlink","data":{"link_type":"Web","url":"https://gitter.im/jamstack/community","target":"_blank"}}]},{"type":"paragraph","text":"Another great feature to consider is the ability to integrate core dynamic functionalities into JAMstack websites. This technology has the ability to handle dynamic server-side features, handling back-end functions with tools like Serverless. Form handling with Formspree or Netlify Forms. Full Search capability Google Search, lunr.js and Algolia, Handle optimal image delivery with Cloudinary. All you have to do is plug and play.","spans":[{"start":231,"end":241,"type":"hyperlink","data":{"link_type":"Web","url":"https://serverless.com/","target":"_blank"}},{"start":262,"end":271,"type":"hyperlink","data":{"link_type":"Web","url":"https://formspree.io/","target":"_blank"}},{"start":275,"end":288,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.netlify.com/docs/form-handling/","target":"_blank"}},{"start":313,"end":326,"type":"hyperlink","data":{"link_type":"Web","url":"https://cse.google.com/cse/","target":"_blank"}},{"start":328,"end":335,"type":"hyperlink","data":{"link_type":"Web","url":"https://lunrjs.com/","target":"_blank"}},{"start":340,"end":347,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.algolia.com/","target":"_blank"}},{"start":384,"end":394,"type":"hyperlink","data":{"link_type":"Web","url":"https://cloudinary.com/","target":"_blank"}}]},{"type":"heading2","text":"Conclusion","spans":[]},{"type":"paragraph","text":"In this article, we have established the advantages of using JAMstack in developing modern web platforms. I would strongly recommend learning more about JAMstack and building faster platforms seamlessly.","spans":[]}],"categories":[{"categories":{"id":"YJQtQhEAACMAGmBK","type":"tag","tags":[],"slug":"jamstack","lang":"en-gb","link_type":"Document","isBroken":false}}]}}],"version":"9cb1372","license":"All Rights Reserved"},"preview":null,"post":{"id":"YKqiUBMAACAAEreV","uid":"lorem-ipsum","type":"blog_post","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YKqiUBMAACAAEreV%22%29+%5D%5D","tags":["test_tag"],"first_publication_date":"2021-05-23T18:44:12+0000","last_publication_date":"2021-05-24T19:09:34+0000","slugs":["lorem-ipsum"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"is_featured":false,"featured_image":{"dimensions":{"width":350,"height":300},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/fe1c2636-a0d4-4616-adf2-d7a3e9c43593_business-parallax-rev-01.jpg?auto=compress,format&rect=435,0,1050,900&w=350&h=300"},"banner_image":{"dimensions":{"width":1920,"height":900},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/fe1c2636-a0d4-4616-adf2-d7a3e9c43593_business-parallax-rev-01.jpg?auto=compress,format"},"date":"2021-05-22T18:30:00+0000","title":[{"type":"heading1","text":"Lorem Ipsum","spans":[]}],"heading":[{"type":"heading1","text":"Lorem Ipsum","spans":[]}],"body":[{"type":"paragraph","text":"Lorem Ipsumis simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.","spans":[{"start":0,"end":11,"type":"strong"}]}],"categories":[{"categories":{"id":"YJQtkxEAACIAGmHC","type":"tag","tags":[],"slug":"developer","lang":"en-gb","link_type":"Document","isBroken":false}}]}},"featuredPosts":{"page":1,"results_per_page":20,"results_size":2,"total_results_size":2,"total_pages":1,"next_page":null,"prev_page":null,"results":[{"id":"YJidgxEAACMALjkw","uid":"flutter-vs.-react-native","type":"blog_post","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJidgxEAACMALjkw%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-10T02:42:16+0000","last_publication_date":"2021-05-24T19:09:13+0000","slugs":["flutter-vs.-react-native"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"is_featured":true,"featured_image":{"dimensions":{"width":350,"height":300},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/6e129c4b-4b82-4992-ade3-28e77cf1fc0a_flutter-vs-react-native.avif?auto=compress,format&rect=81,0,568,487&w=350&h=300"},"banner_image":{"dimensions":{"width":730,"height":487},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/6e129c4b-4b82-4992-ade3-28e77cf1fc0a_flutter-vs-react-native.avif?auto=compress,format"},"date":"2021-05-23T18:30:00+0000","title":[{"type":"heading1","text":"Flutter vs. React Native","spans":[]}],"heading":[{"type":"heading1","text":"Flutter vs. React Native","spans":[]}],"body":[{"type":"paragraph","text":"The two most popular cross-platform mobile app development frameworks available at the moment are Flutter and React Native. These juggernauts are backed by two of the largest tech companies in the world: Flutter was created by Google and React Native was created by Facebook.","spans":[{"start":98,"end":105,"type":"hyperlink","data":{"link_type":"Web","url":"https://flutter.dev/"}},{"start":110,"end":122,"type":"hyperlink","data":{"link_type":"Web","url":"https://reactnative.dev/"}}]},{"type":"paragraph","text":"In this guide, we’ll compare Flutter vs. React Native, explore what makes each framework so special, and discover why they’re so highly sought-after.","spans":[{"start":21,"end":53,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/why-flutter-is-overtaking-react-native/"}}]},{"type":"paragraph","text":"Here’s what we’ll cover:","spans":[]},{"type":"list-item","text":"What is Flutter?","spans":[{"start":0,"end":16,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#whatisflutter"}}]},{"type":"list-item","text":"What is React Native?","spans":[{"start":0,"end":21,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#whatisreactnative"}}]},{"type":"list-item","text":"Key differences between Flutter and React Native","spans":[{"start":0,"end":48,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#keydifferencesbetweenflutterandreactnative"}}]},{"type":"list-item","text":"Why is mobile app development so popular?","spans":[{"start":0,"end":41,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#whyismobileappdevelopmentsopopular"}}]},{"type":"list-item","text":"Flutter vs. React Native: Performance","spans":[{"start":0,"end":37,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#fluttervsreactnativeperformance"}}]},{"type":"list-item","text":"Flutter vs. React Native: Developer ecosystem","spans":[{"start":0,"end":45,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#fluttervsreactnativedeveloperecosystem"}}]},{"type":"list-item","text":"Practical example: Developing an app with Flutter and React Native","spans":[{"start":0,"end":66,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#practicalexample"}}]},{"type":"list-item","text":"Should you use Flutter or React Native?","spans":[{"start":0,"end":39,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flutter-vs-react-native/#shouldyouuseflutterorreactnative"}}]},{"type":"paragraph","text":"To see how React Native stacks up against Xamarin, another popular cross-platform mobile framework, check out “Xamaris vs. React Native.”","spans":[{"start":111,"end":135,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/xamarin-vs-react-native/"}}]},{"type":"heading2","text":"What is Flutter?","spans":[]},{"type":"paragraph","text":"Flutter is a cross-platform UI framework developed by Google. It was first released in May 2017 and has steadily grown in popularity over the years.","spans":[]},{"type":"paragraph","text":"One of Flutter’s main selling points is that it enables you to create cross-platform applications using a single codebase. Traditionally, if a company wanted to create an application that was available on the web, mobile, and desktop, it would have to use more than one tool to achieve that goal. For example, it might need to hire a developer who specializes in web development, another developer who has experience building desktop apps, and a dedicated mobile developer to build apps for iOS and Android.","spans":[{"start":70,"end":97,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/comparing-developer-experience-for-cross-platform-frameworks/"}}]},{"type":"paragraph","text":"In a situation like this, you might have one developer using React to build the website, another using C# and Java to create the desktop version, and Kotlin and Swift to build the Android and iOS apps, respectively. This would require a whole team of developers, not to mention a ton of meetings to make sure the design and branding is consistent across all platforms. You also have to factor in testing for each platform and addressing their respective bugs and quirks.","spans":[{"start":150,"end":156,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/kotlin-vs-flutter-a-comparison-guide/"}}]},{"type":"paragraph","text":"With Flutter, companies can hire one developer to create apps across platforms with just one codebase to manage. This cuts down significantly on the time and resources required to launch and maintain an application.","spans":[]},{"type":"paragraph","text":"Thanks to Flutter one developer can potentially create apps across all of these platforms with just one codebase to manage which would cut down on time and resources.","spans":[]},{"type":"heading2","text":"What is React Native?","spans":[]},{"type":"paragraph","text":"React Native is a cross-platform framework created by Facebook. It makes it fairly simple to create cross-platform applications because the codebase is essentially written in JavaScript. This lowers the barrier to entry for JavaScript developers because they don’t need to learn a completely unfamiliar language.","spans":[]},{"type":"paragraph","text":"Web development has been around for many years and most web developers have been using JavaScript for much of their career. Mobile development is still fairly new, but the ecosystem has matured quite a bit over the past few years. If you already know JavaScript, the learning curve for mobile app development using React Native won’t be as steep.","spans":[]},{"type":"paragraph","text":"These days, many companies are using React Native for app development. Microsoft recently developed its new Xbox store app using React Native, for one prominent example. Like Flutter, React Native makes it possible to create apps across various platforms using one codebase.","spans":[{"start":108,"end":122,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.xbox.com/en-US/microsoft-store"}}]},{"type":"heading2","text":"Key differences between Flutter and React Native","spans":[]},{"type":"paragraph","text":"Flutter and React Native share a lot of similarities, but they are also quite different in a handful of key ways.","spans":[]},{"type":"paragraph","text":"For starters Flutter uses the Dart programming language in its codebase whereas React Native uses JSX, which stands for JavaScript XML. Both languages are based on the C-style type of syntax and follow object-orientated principles. This common ground it means that Flutter and React Native are fundamentally alike in terms of design and the code is very similar as well.","spans":[]},{"type":"heading3","text":"Dynamic vs. static programming","spans":[]},{"type":"paragraph","text":"There is a significant difference when it comes to the core programming language. JavaScript is dynamic by nature. This means you can change the values of various data types, which makes it very versatile. Dart is both dynamic and static, which allows it to have the best of both worlds.","spans":[]},{"type":"paragraph","text":"A statically typed language is generally considered much safer since it forces you to declare and use the correct data type. For example, you can’t assign a number to a string; doing so would throw an error.","spans":[]},{"type":"paragraph","text":"Static means you’re likely to experience fewer errors. It is possible to enforce more type safety and error checking with JavaScript if you opt to use TypeScript, which is a strict syntactical superset of JavaScript, instead.","spans":[]},{"type":"heading3","text":"Layout","spans":[]},{"type":"paragraph","text":"Flutter uses a widget style for constructing the user interface whereas React Native uses JavaScript and JSX. Flutter widgets are premade, so you don’t technically need to create your own custom widgets unless you want to. Since they were created and tested by Google, you don’t need to worry about incompatibility issues.","spans":[]},{"type":"paragraph","text":"One thing I should mention is that if you’re using a programming language such as Swift for mobile app development, you typically can’t see the code that Apple used to create user interface components, such as buttons. With Flutter, by contrast, the code is viewable so you can see how Google created all the widgets.","spans":[]},{"type":"paragraph","text":"Flutter and React Native share common ground when it comes to constructing the layout in that they both use CSS Flexbox. The way they implement it is different, but as long as you know Flexbox, you shouldn’t have any problems building the layout for your app. The team that worked on Flutter also worked on the developer tools for the Google Chrome browser, which makes for a quick transition since the debug tools are quite similar.","spans":[{"start":108,"end":119,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/flexbox-vs-css-grid/"}}]},{"type":"heading2","text":"Why is mobile app development so popular?","spans":[]},{"type":"paragraph","text":"The field of mobile app development has grown steadily over the past few years. Almost everyone on the planet has a mobile phone, so the user base is massive. These days, you can find an app for almost anything.","spans":[]},{"type":"paragraph","text":"There are quite a few paths you can take if you want to create a mobile app. You could choose to go down the native route, which would mean using Swift to create mobile apps or Kotlin to create Android apps. These are the official programming languages Apple and Google use, respectively, so you can expect first-party support and frequent updates.","spans":[]},{"type":"paragraph","text":"Alternatively, you could choose to go down the cross-platform path and use Flutter or React Native. Typically, a native developer would use Xcode and Swift to build iOS apps and Android Studio and Kotlin for Android apps. These tools are applicable for cross-platform work. It’s also quite common for developers to use an integrated development environment (IDE) such as Visual Studio Code.","spans":[{"start":371,"end":389,"type":"hyperlink","data":{"link_type":"Web","url":"https://blog.logrocket.com/top-10-vs-code-extensions-2021/"}}]},{"type":"paragraph","text":"In most cases, developers tend to use an IDE, Android Studio, or Xcode when building apps with Flutter and React Native. My preference is to use Visual Studio Code for React Native apps and Android Studio for Flutter apps. Android Studio actually has a Flutter plugin with code helpers, which makes it much easier to write and debug your code. As of right now, this plugin has 8.3 million downloads, which goes to show just how popular it is.","spans":[]},{"type":"paragraph","text":"At the time of writing, React Native is slightly more popular than Flutter, thanks in part to React Native’s association with the popular web framework React. React Native has also been around for longer so its user base is larger. As such, there is currently higher demand for React Native developers than for Flutter developers.","spans":[]},{"type":"heading2","text":"Flutter vs. React Native: Performance","spans":[]},{"type":"paragraph","text":"Both Flutter and React are open-source, which means they’re free to use. Both libraries are well-maintained, as you would expect considering they’re created by Google and Facebook. It is possible to test apps created using both frameworks, either virtually using a built-in simulator on your computer for iOS and Android or natively on your phone. You’ll need an Apple computer if you intend to develop on iOS since the SDK is only available on Apple computers. Windows users and Linux users are out of luck. Fortunately, you can develop Android development apps on any platform.","spans":[]},{"type":"paragraph","text":"Both frameworks use hot reloading so you can make changes and see them instantly. This makes development more efficient because you don’t have to keep stopping and starting your apps to see updates.","spans":[]},{"type":"paragraph","text":"There is some debate as to whether Flutter and React Native are truly native. The be considered 100 percent native, they would need to be written in the language they were designed for — namely, Swift for iOS and Kotlin/Java for Android.","spans":[]},{"type":"paragraph","text":"The experience you get when using an app that was written in React Native and Flutter is, for the most part, a native experience. The Dart code, which Flutter uses, is complied to C, which is about as close to native as you can expect. You can safely assume that would make for better performance.","spans":[]},{"type":"paragraph","text":"The company that created Reflectly recently moved the app from React Native to Flutter and saw a significant increase in performance. This is one example of an improvement. However, it won’t be the same for every app; there are many edge cases to consider, such as the type of app, codebase, database, phone, operating system, etc.","spans":[{"start":97,"end":132,"type":"hyperlink","data":{"link_type":"Web","url":"https://medium.com/reflectly-engineering/reflectly-from-react-native-to-flutter-2e3dffced2ea"}}]},{"type":"heading2","text":"Flutter vs. React Native: Developer ecosystem","spans":[]},{"type":"paragraph","text":"Developers who are keen on building Flutter apps tend to refer to the official documentation. However, in the case of React Native, you several options. You could use the official documentation or you could use a different platform, the most popular being Expo. Expo offers more features and customizations, including an integrated icon library, whereas the official React Native docs are more bare-bones.","spans":[{"start":70,"end":92,"type":"hyperlink","data":{"link_type":"Web","url":"https://flutter.dev/"}},{"start":171,"end":193,"type":"hyperlink","data":{"link_type":"Web","url":"https://reactnative.dev/"}},{"start":256,"end":260,"type":"hyperlink","data":{"link_type":"Web","url":"https://expo.io/"}}]},{"type":"paragraph","text":"The React Native ecosystem is more mature and has more users since JavaScript has been around since 1995. Flutter, by contrast, was released in 2017. React is probably the most popular frontend framework at the moment and has a very active community across social media. Flutter is no slouch; at the time of writing, it has more stars than React Native on GitHub.","spans":[]},{"type":"paragraph","text":"Both Flutter and React Native have been used in popular commercial applications. Flutter was used to create the apps for Reflectly, Stadia, Baidu, Groupon, and eBay, to name a few. Meanwhile, the apps for Facebook, Instagram, Shopify, and Discord were built with React Native.","spans":[{"start":81,"end":107,"type":"hyperlink","data":{"link_type":"Web","url":"https://flutter.dev/showcase"}},{"start":252,"end":275,"type":"hyperlink","data":{"link_type":"Web","url":"https://reactnative.dev/showcase"}}]},{"type":"paragraph","text":"The numbers are fairly similar across social media too, with Flutter having more followers on Twitter and React Native having a larger following on Reddit.","spans":[{"start":94,"end":101,"type":"hyperlink","data":{"link_type":"Web","url":"https://twitter.com/FlutterDev"}},{"start":148,"end":154,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.reddit.com/r/reactnative/"}}]},{"type":"heading2","text":"Practical example: Developing an app with Flutter and React Native","spans":[]},{"type":"paragraph","text":"Let’s run through some quick code examples to demonstrate how to create an app using Flutter and React Native.","spans":[]},{"type":"paragraph","text":"Our example app is called Social and it has two screens. The iOS and Android versions look identical. The images below show how it looks on an iPhone:","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading3","text":"Flutter code examples","spans":[]},{"type":"paragraph","text":"Flutter’s widget-based architecture is quite unique compared to traditional programming methodologies. Once you understand how it works, it becomes second nature.","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading4","text":"main.dart file","spans":[]},{"type":"preformatted","text":"import 'package:flutter/material.dart';\nimport 'package:social_app/screens/home_screen.dart';\nimport 'package:social_app/screens/profile_screen.dart';\n\nvoid main() {\n  runApp(Social());\n}\n\nclass Social extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      initialRoute: HomeScreen.id,\n      routes: {\n        HomeScreen.id: (context) => HomeScreen(),\n        ProfileScreen.id: (context) => ProfileScreen(),\n      },\n    );\n  }\n}","spans":[]},{"type":"heading4","text":"home_screen.dart","spans":[]},{"type":"preformatted","text":"import 'package:flutter/material.dart';\nimport 'package:social_app/screens/profile_screen.dart';\n\nclass HomeScreen extends StatelessWidget {\n  static String id = 'home_screen';\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Color(0xffb0c1957),\n      appBar: AppBar(\n        toolbarHeight: 40,\n        title: Text(\n          'Social',\n          style: TextStyle(\n              color: Colors.black, fontSize: 16, fontWeight: FontWeight.bold),\n        ),\n        backgroundColor: Colors.white,\n      ),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        children: [\n          Container(\n            width: 400,\n            margin: EdgeInsets.only(top: 20),\n            child: RaisedButton(\n              color: Color(0xff23397B),\n              padding: EdgeInsets.all(20),\n              onPressed: () {\n                Navigator.push(context,\n                    MaterialPageRoute(builder: (context) => ProfileScreen()));\n              },\n              child: Text(\n                'PROFILE',\n                style:\n                    TextStyle(color: Colors.white, fontWeight: FontWeight.bold),\n              ),\n            ),\n          ),\n          SizedBox(\n            height: 1,\n          ),\n          Container(\n            child: Center(\n              child: Text(\n                'HOME',\n                style: TextStyle(\n                    fontSize: 40,\n                    color: Colors.white,\n                    fontWeight: FontWeight.bold),\n              ),\n            ),\n          ),\n          Container(\n            child: Image(\n              image: AssetImage('images/home-bg.jpg'),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}","spans":[]},{"type":"heading4","text":"profile_screen.dart","spans":[]},{"type":"preformatted","text":"import 'package:flutter/material.dart';\nimport 'package:social_app/screens/home_screen.dart';\n\nclass ProfileScreen extends StatelessWidget {\n  static String id = 'profile_screen';\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Color(0xffb0c1957),\n      appBar: AppBar(\n        toolbarHeight: 40,\n        title: Text(\n          'Social',\n          style: TextStyle(\n              color: Colors.black, fontSize: 16, fontWeight: FontWeight.bold),\n        ),\n        backgroundColor: Colors.white,\n      ),\n      body: Column(\n        mainAxisAlignment: MainAxisAlignment.start,\n        children: [\n          Container(\n            width: 400,\n            margin: EdgeInsets.only(top: 20),\n            child: RaisedButton(\n              color: Color(0xff23397B),\n              padding: EdgeInsets.all(20),\n              onPressed: () {\n                Navigator.push(context,\n                    MaterialPageRoute(builder: (context) => HomeScreen()));\n              },\n              child: Text(\n                'HOME',\n                style:\n                    TextStyle(color: Colors.white, fontWeight: FontWeight.bold),\n              ),\n            ),\n          ),\n          SizedBox(\n            height: 50,\n          ),\n          Container(\n            child: Center(\n              child: Text(\n                'PROFILE',\n                style: TextStyle(\n                    fontSize: 40,\n                    color: Colors.white,\n                    fontWeight: FontWeight.bold),\n              ),\n            ),\n          ),\n          SizedBox(\n            height: 20,\n          ),\n          Container(\n              child: CircleAvatar(\n            radius: 130.0,\n            backgroundImage: AssetImage('images/profile-image.jpg'),\n          )),\n          SizedBox(\n            height: 20,\n          ),\n          Container(\n            child: Text(\n              'SARAH TAYLOR',\n              style: TextStyle(\n                  color: Colors.white,\n                  fontSize: 20,\n                  fontWeight: FontWeight.bold),\n            ),\n          ),\n          SizedBox(\n            height: 20,\n          ),\n          Container(\n            color: Color(0xff000d4a),\n            padding: EdgeInsets.all(18.0),\n            child: Container(\n              child: Text(\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ut ultricies velit. Proin at nisi nisl. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam eu tincidunt dui. Quisque non ornare ex, facilisis congue enim. In neque nulla, posuere at gravida id, dapibus et libero.\",\n                style: TextStyle(\n                  color: Colors.white,\n                  fontSize: 17,\n                ),\n              ),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n}","spans":[]},{"type":"heading3","text":"React Native code examples","spans":[]},{"type":"paragraph","text":"If you already know React for the web, the code here will look very familiar. The architecture for setting up a React Native project is almost the same as in React.","spans":[]},{"type":"heading4","text":"Project structure","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading4","text":"App.js","spans":[]},{"type":"preformatted","text":"// Import statements for the components used in the app and the navigation\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst Stack = createStackNavigator();\nimport HomeScreen from './src/screens/HomeScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\n// The main component with all of the screen routing business logic\nconst App = () => {\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"HomeScreen\" screenOptions={{ gestureEnabled: false }}>\n                <Stack.Screen name=\"HomeScreen\" component={HomeScreen} options={{ title: 'Social' }} />\n                <Stack.Screen name=\"ProfileScreen\" component={ProfileScreen} options={{ title: 'Social' }} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\nexport default App;","spans":[]},{"type":"heading4","text":"Home.js","spans":[]},{"type":"preformatted","text":"// Import statements for the components used in the app\nimport React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport HomeBG from '../../assets/home-bg.jpg';\n// The main component for the HomeScreen\nconst HomeScreen = ({ navigation }) => {\n    return (\n        <View style={styles.appStyle}>\n            <TouchableOpacity\n                style={styles.btnContainer}\n                title=\"Profile\"\n                onPress={() => navigation.navigate('ProfileScreen')}\n            >\n                <Text style={styles.btnText}>Profile</Text>\n            </TouchableOpacity>\n            <Text style={styles.heading}>Home</Text>\n            <View>\n                <Image style={styles.homeBG} source={HomeBG} />\n            </View>\n        </View>\n    );\n};\n// The component specific styles for the HomeScreen\nconst styles = StyleSheet.create({\n    appStyle: {\n        backgroundColor: 'rgb(12,25,87)',\n        height: '100%',\n    },\n    btnContainer: {\n        backgroundColor: '#23397B',\n        padding: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginHorizontal: 20,\n        marginVertical: 20,\n    },\n    btnText: {\n        color: '#ffffff',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n    heading: {\n        fontSize: 40,\n        color: '#ffffff',\n        textAlign: 'center',\n        margin: 20,\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n    homeBG: {\n        height: '100%',\n        width: '100%',\n    },\n});\nexport default HomeScreen;","spans":[]},{"type":"heading4","text":"ProfileScreen.js","spans":[]},{"type":"preformatted","text":"// Import statements for the components used in the app\nimport React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport ProfileImage from '../../assets/profile-image.jpg';\n// The main component for the ProfileScreen\nconst ProfileScreen = ({ navigation }) => {\n    return (\n        <View style={styles.appStyle}>\n            {/* TouchableOpacity is basically a more customizable button component */}\n            <TouchableOpacity style={styles.btnContainer} title=\"Profile\" onPress={() => navigation.navigate('HomeScreen')}>\n                <Text style={styles.btnText}>Home</Text>\n            </TouchableOpacity>\n            <Text style={styles.heading}>Profile</Text>\n            <View style={styles.profileContainer}>\n                <Image style={styles.profileImage} source={ProfileImage} />\n            </View>\n            <View>\n                <Text style={styles.profileName}>Sarah Taylor</Text>\n            </View>\n            <View style={styles.profileBioContainer}>\n                <Text style={styles.profileBio}>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla ut ultricies velit. Proin at nisi nisl. Class\n                    aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam eu tincidunt dui.\n                    Quisque non ornare ex, facilisis congue enim. In neque nulla, posuere at gravida id, dapibus et libero.\n                </Text>\n            </View>\n        </View>\n    );\n};\n// The component specific styles for the ProfileScreen\nconst styles = StyleSheet.create({\n    appStyle: {\n        backgroundColor: 'rgb(12,25,87)',\n        height: '100%',\n    },\n    btnContainer: {\n        backgroundColor: '#23397B',\n        padding: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginHorizontal: 20,\n        marginVertical: 20,\n    },\n    btnText: {\n        color: '#ffffff',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n    heading: {\n        fontSize: 40,\n        color: '#ffffff',\n        textAlign: 'center',\n        margin: 20,\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n    },\n    profileContainer: {\n        alignItems: 'center',\n    },\n    profileImage: {\n        borderRadius: 100,\n        height: 250,\n        width: 250,\n    },\n    profileName: {\n        color: '#ffffff',\n        fontSize: 20,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        margin: 20,\n        textTransform: 'uppercase',\n    },\n    profileBioContainer: {\n        backgroundColor: 'rgba(0,13,74,0.4234068627450981)',\n    },\n    profileBio: {\n        marginHorizontal: 20,\n        marginVertical: 20,\n        color: '#ffffff',\n        fontSize: 18,\n    },\n});\nexport default ProfileScreen;","spans":[]},{"type":"heading2","text":"Should you use Flutter or React Native?","spans":[]},{"type":"paragraph","text":"There is no clear winner here: both Flutter and React have their pros and cons, and the right choice will depend on your experience and the goals and requirements of your project.","spans":[]},{"type":"paragraph","text":"If you already know JavaScript, writing mobile apps in React Native is a no-brainer. However, if you’re looking for better performance and stability and a more cohesive environment between ecosystems, you should consider giving Flutter a try.","spans":[]}],"categories":[{"categories":{"id":"YJQtchEAACIAGmEq","type":"tag","tags":[],"slug":"prismic","lang":"en-gb","link_type":"Document","isBroken":false}}]}},{"id":"YJNPvBEAACMAFnZ1","uid":"why-you-should-be-using-jamstack","type":"blog_post","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJNPvBEAACMAFnZ1%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-06T02:09:05+0000","last_publication_date":"2021-05-24T19:08:41+0000","slugs":["why-you-should-be-using-jamstack"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"is_featured":true,"featured_image":{"dimensions":{"width":350,"height":300},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/96453228-78db-40f3-88db-9002b57af80e_usejamstack.avif?auto=compress,format&rect=212,0,817,700&w=350&h=300"},"banner_image":{"dimensions":{"width":1240,"height":700},"alt":null,"copyright":null,"url":"https://images.prismic.io/distinctcloud/96453228-78db-40f3-88db-9002b57af80e_usejamstack.avif?auto=compress,format"},"date":"2021-05-22T18:30:00+0000","title":[{"type":"heading1","text":"Why you should be using JAMstack","spans":[]}],"heading":[{"type":"heading1","text":"","spans":[]}],"body":[{"type":"heading2","text":"Why you should be using JAMstack","spans":[]},{"type":"paragraph","text":"Working in the world of development can be a bit confusing, with lots of trends coming up to interrupt our normal lives and give us a bad case of FOMO. We‘re mostly stuck between learning, relearning and unlearning. Sometimes the new trends are not different from technologies we’ve already been using, other times, it will change your life or in this case, your stack.","spans":[]},{"type":"paragraph","text":"In this article, we will be looking at the JAMstack and how it has come to make a huge difference in the way we build web platforms. We will be exploring how this approach to simplifying the technology stack can lead to shorter development times, with better performance and greater security.","spans":[{"start":43,"end":51,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/","target":"_blank"}}]},{"type":"heading2","text":"What have we been doing?","spans":[]},{"type":"paragraph","text":"We have conventionally built web sites and web apps by setting up servers to help interact with a database and yes, that worked, but also we’d have to spend a lot of time worrying about performance and setting up these facilities. Security protocols for these platforms also cost a lot and since we have information moving from the server side to the client side, platforms may be prone to security risks.","spans":[]},{"type":"heading2","text":"What is JAMstack?","spans":[]},{"type":"paragraph","text":"It’s not a bird, it’s not a plane …… no, it’s not Superman. JAMstack (JavaScript, API & Markdown) is a new way of building websites and apps that delivers better performance, higher security, lower cost of scaling, and better developer experience. It achieves this by keeping most of the functionality on the client side and abstracting all other functionalities to 3rd party API’s. Basically, all the heavy lifting is done by the API’s.","spans":[{"start":60,"end":68,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/","target":"_blank"}}]},{"type":"paragraph","text":"With the emphasis on web performance and great user experience, a few trends emerged:","spans":[]},{"type":"list-item","text":"PWA (offline apps, reliable, native-like UX)","spans":[]},{"type":"list-item","text":"Serverless (simplified back-end, best-of-breed services, infinite scalability without regard for physical location of servers)","spans":[{"start":0,"end":10,"type":"hyperlink","data":{"link_type":"Web","url":"https://serverless.com/","target":"_blank"}}]},{"type":"list-item","text":"GraphQL(standardized access to data for apps that use ad-hoc, fast-changing, database schema)","spans":[{"start":0,"end":7,"type":"hyperlink","data":{"link_type":"Web","url":"https://graphql.org/","target":"_blank"}}]},{"type":"list-item","text":"SSG (using CDN techniques for edge caching of pre-rendered content pages)","spans":[]},{"type":"paragraph","text":"The above trends developed independently until JAMstack came and unified them. And now that JAMStack is here, people are starting to pull away from servers. At the same time, they are running after speed, optimization, and snappy websites.","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"heading2","text":"Meet the stacks","spans":[{"start":0,"end":15,"type":"strong"}]},{"type":"paragraph","text":"Before we go further into discussing how JAMstack achieves its awesomeness, let’s take a look at the other stacks and how they work, to help better appreciate the JAMstack. Before its existence developers used different tools to set up web platforms and apps as such.","spans":[]},{"type":"heading3","text":"LAMP","spans":[]},{"type":"paragraph","text":"LAMP represents the foundation of a Linux hosted website. LAMP stacks are comprised of, a Linux operating system (L), an Apache Web Server (A), a MySQL database layer (M) and a PHP scripting layer (P). The major problem with this stack is that it has a learning curve. This increases the amount of time to set up a functional app and this can eventually lead to performance issues on applications with simultaneous users, as well as security issues.","spans":[{"start":0,"end":4,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.digitalocean.com/community/tags/lamp-stack?type=tutorials","target":"_blank"}},{"start":121,"end":138,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.techopedia.com/definition/4851/apache-web-server","target":"_blank"}}]},{"type":"heading3","text":"MEAN","spans":[]},{"type":"paragraph","text":"The stack is comprised of a MongoDB (M) document database, Express.js (E) which is a back-end web application framework, Angular.js (A) which is a front-end web application framework, and Node.js (N), a JavaScript run-time environment. Platforms are built in JavaScript from start to finish here and it is really recommended for large, non-relational data set, the only set back here is that everything is done in just JavaScript.","spans":[]},{"type":"heading3","text":"MERN","spans":[]},{"type":"paragraph","text":"The stack is comprised of a MongoDB (M) document database, Express.js (E) which is a back-end web application framework, React (R) which is a JavaScript library for building user interfaces and Node.js (N), a JavaScript run time environment. Again platforms are built in JavaScript from start to finish and the only set back here is that everything is done in just JavaScript.","spans":[]},{"type":"heading2","text":"How other stacks work","spans":[]},{"type":"list-item","text":"Building and hosting are coupled","spans":[]},{"type":"list-item","text":"A user requests a page. The file gets processed and served following a (long) series of interaction between a database, back-end code, server, browser, and layers of caching","spans":[]},{"type":"list-item","text":"Core updates are pushed to production servers, often through FTP. The database must be maintained or updated","spans":[]},{"type":"list-item","text":"Content updates are pushed through traditional CMS, like WordPress or Drupal","spans":[]},{"type":"heading2","text":"JAMstack workflow","spans":[]},{"type":"list-item","text":"Building and hosting are decoupled","spans":[{"start":25,"end":34,"type":"em"}]},{"type":"list-item","text":"A user requests a page. The file is already compiled and gets directly served to the browser from a CDN","spans":[]},{"type":"list-item","text":"Core updates are pushed through Git; the site gets re-built entirely via modern build tools like static site generators (Gatsby, Hugo)","spans":[]},{"type":"list-item","text":"Content updates are pushed through Git or a static site CMS","spans":[]},{"type":"heading2","text":"JAMstack superpowers","spans":[]},{"type":"paragraph","text":"You might be wondering why you need to use another stack. Well, I have five reasons you should be using JAMstack:","spans":[]},{"type":"list-item","text":"Better performance: Building with JAMstack helps to get pages generated at deploy time since they are mainly stored as Markup and can be delivered over a CDN.","spans":[{"start":0,"end":18,"type":"strong"}]},{"type":"list-item","text":"High-security: Static websites have a very low potential for vulnerabilities because it is just HTML files and external API-handling served over a CDN. This reduces any possible risk for attack on the website. It is easy to integrate SSL certificate with Let’s Encrypt. Also, it leverages the use of server-side microservice APIs to secure the websites.","spans":[{"start":0,"end":13,"type":"strong"},{"start":255,"end":268,"type":"hyperlink","data":{"link_type":"Web","url":"https://letsencrypt.org/","target":"_blank"}}]},{"type":"list-item","text":"Cheap and fast deployment: JAMstack websites can easily be deployed without going through the hassle of configuring databases and securing the database. We are only dealing with static files which are simple to get up and running.","spans":[{"start":0,"end":25,"type":"strong"}]},{"type":"list-item","text":"Awesome developer experience: One of the most important advantages of using JAMstack is that it is not difficult to learn. With just HTML, CSS and JS experience, developers can build complex websites. The use of site generators removes the need to maintain a separate stack for content and marketing.","spans":[{"start":0,"end":28,"type":"strong"}]},{"type":"list-item","text":"Great community: The JAMstack community is growing over time. New support for various functionality springs up every day. Even more exciting is the local community meetups being created. The online community is also amazing.","spans":[{"start":0,"end":15,"type":"strong"},{"start":148,"end":171,"type":"hyperlink","data":{"link_type":"Web","url":"https://jamstack.org/community/","target":"_blank"}},{"start":191,"end":207,"type":"hyperlink","data":{"link_type":"Web","url":"https://gitter.im/jamstack/community","target":"_blank"}}]},{"type":"paragraph","text":"Another great feature to consider is the ability to integrate core dynamic functionalities into JAMstack websites. This technology has the ability to handle dynamic server-side features, handling back-end functions with tools like Serverless. Form handling with Formspree or Netlify Forms. Full Search capability Google Search, lunr.js and Algolia, Handle optimal image delivery with Cloudinary. All you have to do is plug and play.","spans":[{"start":231,"end":241,"type":"hyperlink","data":{"link_type":"Web","url":"https://serverless.com/","target":"_blank"}},{"start":262,"end":271,"type":"hyperlink","data":{"link_type":"Web","url":"https://formspree.io/","target":"_blank"}},{"start":275,"end":288,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.netlify.com/docs/form-handling/","target":"_blank"}},{"start":313,"end":326,"type":"hyperlink","data":{"link_type":"Web","url":"https://cse.google.com/cse/","target":"_blank"}},{"start":328,"end":335,"type":"hyperlink","data":{"link_type":"Web","url":"https://lunrjs.com/","target":"_blank"}},{"start":340,"end":347,"type":"hyperlink","data":{"link_type":"Web","url":"https://www.algolia.com/","target":"_blank"}},{"start":384,"end":394,"type":"hyperlink","data":{"link_type":"Web","url":"https://cloudinary.com/","target":"_blank"}}]},{"type":"heading2","text":"Conclusion","spans":[]},{"type":"paragraph","text":"In this article, we have established the advantages of using JAMstack in developing modern web platforms. I would strongly recommend learning more about JAMstack and building faster platforms seamlessly.","spans":[]}],"categories":[{"categories":{"id":"YJQtQhEAACMAGmBK","type":"tag","tags":[],"slug":"jamstack","lang":"en-gb","link_type":"Document","isBroken":false}}]}}],"version":"9cb1372","license":"All Rights Reserved"},"categories":{"page":1,"results_per_page":20,"results_size":3,"total_results_size":3,"total_pages":1,"next_page":null,"prev_page":null,"results":[{"id":"YJQtQhEAACMAGmBK","uid":null,"type":"tag","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJQtQhEAACMAGmBK%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-06T17:54:14+0000","last_publication_date":"2021-05-24T19:14:32+0000","slugs":["jamstack"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"categories":"jamstack"}},{"id":"YJQtchEAACIAGmEq","uid":null,"type":"tag","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJQtchEAACIAGmEq%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-06T17:55:04+0000","last_publication_date":"2021-05-24T19:14:13+0000","slugs":["prismic"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"categories":"prismic"}},{"id":"YJQtkxEAACIAGmHC","uid":null,"type":"tag","href":"https://distinctcloud.cdn.prismic.io/api/v2/documents/search?ref=YKv7GBMAACMAGNXK&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YJQtkxEAACIAGmHC%22%29+%5D%5D","tags":[],"first_publication_date":"2021-05-06T17:55:36+0000","last_publication_date":"2021-05-24T19:13:59+0000","slugs":["developer"],"linked_documents":[],"lang":"en-gb","alternate_languages":[],"data":{"categories":"developer"}}],"version":"9cb1372","license":"All Rights Reserved"}},"__N_SSG":true}